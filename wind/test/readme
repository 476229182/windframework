******************************************************************
说明如下：
******************************************************************
要用phpunit进行单元测试，需要先在zend中设置你的工程使用的unit类库，方法如下：
1]、点击需要测试的工程，右键->properties：
2]、在该选项框的左边选中：php-Include-Path
3]、在右边的选项卡片中，选中：Libraries
如果里面已经含有phpunit类库则可以跳过下面的步骤：
4]、单击添加类库按钮：Add Library
5]、选中PHPUnit,一路Next,然后OK 即可
如果zend studio中没有默认的PHPUnit类库，则需要自己去网上下载该包并引入。


****************************************************************** 
目录说明：
单元测试的目录结构和框架的目录结构采用相同的结构，
对应目录下的单元测试放在对应的测试目录中。
每个目录下都需要建一个统一测试该目录下的所有测试类的测试类，名称以Wind+目录名+AllTests为类名及文件名
并且该类继承PHPUnit_Framework_TestSuite类


****************************************************************** 
测试编写说明：
引入文件：BaseTestSetting.php  //该文件中声明了一个常量R_P, 指定到框架根目录的
---------------------------------------------------------------------
单元测试单个测试类编写:
1、以类文件名字前加Test为测试类的类名及文件名。
       比如，我要测试WindMySqlBuilder这个类，则将名字取名为WindMySqlBuilderTest
2、这个测试类需要继承PHPUnit_Framework_TestCase这个基类，
3、测试类中根据测试的需要加载自己的类文件，比如加载WindMySqlBuilder，而其
       所需的基础文件已经在BaseTestSetting这个文件中加载，需要引入这个文件
4、该测试类中如果有初始化的信息可以重写setup ，销毁调用tearDown
5、对于需要测试的函数，需要使用test+方法名，添加测试方法
6、测试的执行：点击页面右键->run as -> PHPUnit 
       或者使用快捷键：alt+shift+x U
       
       
注意：这里需要引入要测试的类       

---------------------------------------------------------------------
单元测试多个测试类同时测试编写---suite：
1、继承PHPUnit_Framework_TestSuite
2、重写静态方法suite，该方法在加载完需要测试的测试类后最终返回一个自身对象
3、加载测试类：有两种方式：
   1): addTest();//这个需要加载的是PHPUnit_Framework_TestSuite的子类对象，所以如果要用该方法加载，需要用测试类创建该对象
   比如： addTest(new PHPUnit_Framework_TestSuite('TestWSqlBuilder'));
                 同时该方法也用于在该suite集中增加另外一个suite集，比如我实现了一个suite是WindBaseAllTests
      则： addTest(WindBaseAllTests::suite()); 
   2): addTestSuite();//这个需要加载只要测试类的名字就可以，该方法会自动创建对象
  比如： addTestSuite('TestWSqlBuilder');

4、执行该suite
       点击页面右键->run as -> PHPUnit 
       或者使用快捷键：alt+shift+x U

注意：这里需要引入要加载的测试类


-------------------------------------------------------------------
全局测试类的入口：
该为了使用方便，该测试部署也提供了一个全局的测试类入口，用来测试所有测试类
入口为止：测试根目录下的WindAllTests.php文件， 执行该文件，将会测试所有被加载的测试类
该类也是一个suite,满足上面所有suite需要的要求，不同的是：
1、该类中suite方法中加载了所有对应子目录下的AllTests 类， 而无需加载每一个测试类。
2、该类引入的文件也除基本测试配置文件(BaseTestSetting)之外只要引入对应的AllTests类文件即可




******************************************************************   
断言方法：assert*
******************************************************************       
测试结果说明：
红色条：存在测试失败的方法
绿色条：全部方法测试成功

方法前面的：
红色叉叉：测试失败的方法
蓝色叉叉：含有测试失败的情况
绿色勾勾：测试成功的方法


