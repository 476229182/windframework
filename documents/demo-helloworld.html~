<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>文档-windframework</title>
<link href="../images/google-code-prettify/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../images/google-code-prettify/prettify.js"></script>
<link href="../images/style.css" rel="stylesheet" />
</head>
<body onload="prettyPrint()">
	<div class="head_wrap">
		<div class="head">
			<div class="logo"><img src="../images/logo.png"></div>
			<div class="nav">
				<ul class="cc">
					<li><a href="index.html">首页</a><em></em></li>
					<li><a href="framework.html">关于框架</a><em></em></li>
					<li class="current"><a href="../documents.html">Documents</a><em></em></li>
					<li><a href="https://github.com/phpwind/windframework/wiki/FAQ">FAQ</a><em></em></li>
				</ul>
			</div>
		</div>
	</div>
	<div class="main_wrap">
		<div class="main">			
			<div class="info">
				经典的hello world应用实例,用一个非常熟悉的应用来开启一个新框架的学习应用吧!这个应用实例会一如既往的在浏览器窗口打印‘Hello World’字样。当然这个应用非常的简单,我们应该可以很快的完成这个应用并看到‘hello world’的输出。我想这应该快速的拉近了我们之间的距离,但是想要做出强大的应用只是这样还远远不够。通过该实例我们将了解到:
				<ol>
					<li>如何获取windframework框架源码</li>
					<li>windframework框架环境需求</li>
					<li>windframework基础的目录结构和默认运行规则</li>
					<li>你还会创建自己的第一个action controller</li>
				</ol>					
			</div>	
			
			<h2 class="h"><strong>下载框架源码</strong></h2>
			<div class="info">
				<i>*如果您手头已经有了一份框架代码那么可以跳过此步骤</i>
				<p>windframework在github上进行发布和共享。访问
				<a href="https://github.com/phpwind/windframework/downloads">https://github.com/phpwind/windframework/downloads</a> 获取框架最新源代码,你也可以在此找到以前的Release版本。下载解压,或者直接使用 git@github.com:phpwindwindframework.git</p>
				<h3>环境要求:</h3>
				<ul>
					<li>php5.1.2及以上版本</li>
					<li>可发布的web环境,apache或nginx等</li>
				</ul>
			</div>

			<h2 class="h"><strong>helloworld</strong></h2>
			<div class="info">
				<h3>创建应用目录文件</h3>
				<p>我们在web的根目录(/var/www 或者其他地方)创建一个文件夹,命名为helloworld。将下载好
				的框架解压并放到该应用目录下。创建好的目录结构如下:</p>
				<i>/var/www/helloworld/
				<ul><li>wind/ 框架目录</li>
				<li>controller/ 应用控制器目录,业务代码放在该目录下</li>
				<li>controller/IndexController.php 默认访问的应用控制器</li>
				<li>template/ 页面模板目录</li>
				<li>template/index.htm 模板文件</li>
				<li>index.php 入口脚本文件</li></ul></i>
			
				<h3>编辑入口脚本index.php</h3>
				<p>在应用目录下创建入口脚本index.php,它的主要工作是加载框架并启动应用。代码如下:</p>
<pre class="prettyprint Lang-php">
require_once ('../../wind/Wind.php');
Wind::application()->run();
</pre>
				<i>*当然也可以同时在index.php中设置错误级别,WIND_DEBUG模式等,相关内容后面会介绍。</i>
				<h3>创建IndexController.php</h3>
				<p>在应用目录下创建controller/目录。controller目录是windframework默认定义的应用控制器存放的目
				录,我们也可以通过手动配置的方式来改变应用的访问路径。在我们创建的 controller/ 目录下创建
				IndexController.php类文件。文件内容如下:</p>
<pre class="prettyprint Lang-php">
/**
* the last known user to change this file in the repository <$LastChangedBy: long.shi $>
* @author Qiong Wu &#60;papa0924@gmail.com&#62;
* @version $Id: IndexController.php 2806 2011-09-23 03:28:55Z long.shi $
* @package
*/
class IndexController extends WindController {
	public function run() {
		echo 'hello world';
	}
}
</pre>
			<i>*在windframework中文件名和类名是相同的,这一点有点类似于java。
			windframework提供了两个应用控制器的类型‘WindSimpleController’,‘WindController’。
			在这里我们继承自‘WindController’,这两个应用控制器的区别,在后面会具体介绍。</i>
			
			至此,我们的helloworld 应用已经完成。快通过浏览器访问下我们的helloworld。
			
			<h3>总结</h3>
			<p>按照如上所述的步骤,我们创建了我们的第一个windframework的应用。为了能使开发者快速的上手,我们在很多地方都浅尝辄止了。正如你在阅读以上步骤的时候产生的疑问那样:</p>
			<ol>
				<li>我们要如何自定义工程目录结构呢?</li>
				<li>要按业务划分多个controller目录怎么办?</li>
				<li>如何将应用数据持久化呢?</li>
				<li>我要怎么样使用页面模板?</li>
				<li>怎么使视图有统一的布局?</li>
			</ol>
			想问的问题太多了吧,接着阅读下面的例子。
			</div>		
			<div class="info">
				（作者：yishuo 最后更新日期：2012-05-18		）
			</div>	
		</div>
	</div>
	<div class="footer_wrap">
		<div class="footer">
			&copy; 2012 windframework
		</div>
	</div>
</body>
</html>