<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>文档-windframework</title>
<link href="../images/google-code-prettify/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../images/google-code-prettify/prettify.js"></script>
<link href="../images/style.css" rel="stylesheet" />
</head>
<body onload="prettyPrint()">
	<div class="head_wrap">
		<div class="head">
			<div class="logo"><img src="../images/logo.png"></div>
			<div class="nav">
				<ul class="cc">
					<li><a href="../index.html">首页</a><em></em></li>
					<li><a href="../framework.html">关于框架</a><em></em></li>
					<li class="current"><a href="../documents.html">Documents</a><em></em></li>
					<li><a href="https://github.com/phpwind/windframework/wiki/FAQ">FAQ</a><em></em></li>
				</ul>
			</div>
		</div>
	</div>
	<div class="main_wrap">
		<div class="main">			
			在wf框架中主要涉及到两个配置，组建配置和应用配置。
			<h2 class="h"><strong>组件配置component_config</strong></h2>			
			<div class="info">
			
<table border="1">
<tr>
<td>配置项</td>
<td>必填</td>
<td>默认值/可选值</td>
<td>说明</td>
</tr>
<tr>
<td>component</td>
<td></td>
<td>/</td>
<td>标识一个组件的定义</td>
</tr>
<tr>
<td>name</td>
<td>Y</td>
<td></td>
<td>组件的别名,用于唯一标识一个组件。我们可以通过组件别名来获取组件实例。</td>
</tr>
<tr>
<td>path</td>
<td>Y</td>
<td></td>
<td>该组件的类路径,路径支持目录别名方式。例:WIND:web.WindWebApplication</td>
</tr>
<tr>
<td>nitMethod</td>
<td>N</td>
<td></td>
<td>注册初始化操作。必须为组件类的public方法。被注册的操作将会在应用创建结束后被调用执行</td>
</tr>
<tr>
<td>destroy</td>
<td>N</td>
<td></td>
<td>注册清理操作。必须为组件类的public方法。组件工厂中的所有被实例化的组件的清理操作,将会在应用结束后统一被调用执行。</td>
</tr>
<tr>
<td>Scope</td>
<td>Y</td>
<td>singleton,application,prototype</td>
<td>组件对象的生命周期</td>
</tr>
<tr>
<td>proxy</td>
<td>N</td>
<td>true,false</td>
<td>是否开启代理</td>
</tr>
<tr>
<td>properties</td>
<td>N</td>
<td></td>
<td>组件的属性定义,我们可以通过配置定义的方式为组件注入依赖关系。<br>
支持两个属性 ‘name’,‘ref/value/path’<br>
name: 属性名称,必须和类里面属性同名,类属性需要定义为protected。</td>
</tr>
<tr>
<td>constructor-args</td>
<td>N</td>
<td></td>
<td>构造方法的参数值,支持name,ref/value/path 两个属性同上</td>
</tr>
<tr>
<td>config</td>
<td>N</td>
<td></td>
<td>组件的配置定义支持resource模式,resource模式允许引入一个外部的配置文件,resource的值指向一个外部的配置文件。路径格式支持目录别名方式。</td>
</tr>
</table>			

<p>组件配置举例(例子为xml格式，wf中支持xml,php,ini,properties等格式):	</p>		
<pre class="prettyprint Lang-xml">
&#60;?xml version="1.0" encoding="UTF-8"?>
&#60;component name='' path='' initMethod='' scope="application/singleton/prototype/" proxy='' destroy=''>
&#60;properties>
&#60;property name='' ref/value/path='' />
&#60;property name='' ref/value/path='' />
&#60;/properties>
&#60;constructor-args>
&#60;constructor-arg name='0' ref/value/path='' />
&#60;constructor-arg name='1' ref/value/path='' />
&#60;/constructor-args>
&#60;config resource=''>
&#60;/component>
</pre>
</div>
				
<h2 class="h"><strong>应用配置app_config</strong></h2>		
<div class="info">
<DIV style="DIRECTION: ltr">
<TABLE border="1">
  <TBODY>
  <TR>
    <TD>配置项</TD>
    <TD>必填</TD>
    <TD>默认值/可选值</TD>
    <TD>说明</TD></TR>
  <TR>
    <TD>isclose</TD>
    <TD>N</TD>
    <TD>0,1</TD>
    <TD>站点是否关闭设置，默认不关闭</TD></TR>
  <TR>
    <TD>isclose-tpl</TD>
    <TD>N</TD>
    <TD></TD>
    <TD>站点关闭后转向的模板路径，支持命名空间，需指明准确的文件后缀。例：TEST:template.closed.htm</TD></TR>
  <TR>
    <TD>components</TD>
    <TD>N</TD>
    <TD></TD>
    <TD>组件配置，该标签允许自定义组件配置、重载系统组件配置等</TD></TR>
  <TR>
    <TD>web-apps</TD>
    <TD></TD>
    <TD>/</TD>
    <TD>该标签，标识一段应用定义</TD></TR>
  <TR>
    <TD>web-app</TD>
    <TD></TD>
    <TD>/</TD>
    <TD>应用配置</TD></TR>
  <TR>name</TD>
    <TD>Y</TD>
    <TD></TD>
    <TD>应用别名，唯一</TD></TR>
  <TR>
    <TD>class</TD>
    <TD>Y</TD>
    <TD>windApplication</TD>
    <TD>应用类型，该值指向一个组件定义，默认启动组件</TD></TR>
  <TR>
    <TD>iscache</TD>
    <TD>N</TD>
    <TD>true,false</TD>
    <TD>是否开启系统cache</TD></TR>
  <TR>
    <TD>charset</TD>
    <TD></TD>
    <TD>utf-8</TD>
    <TD>定义应用编码</TD></TR>
  <TR>
    <TD>filters</TD>
    <TD></TD>
    <TD>/</TD>
    <TD>配置应用过滤器，支持通表达式</TD></TR>
  <TR>
    <TD>filter</TD>
    <TD></TD>
    <TD>/</TD>
    <TD>过滤链中的一个过滤器配置</TD></TR>
  <TR>
    <TD>name</TD>
    <TD>Y</TD>
    <TD></TD>
    <TD>过滤器的名字，唯一</TD></TR>
  <TR>
    <TD>class</TD>
    <TD>Y</TD>
    <TD></TD>
    <TD>过滤器的实现</TD></TR>
  <TR>
    <TD>pattern</TD>
    <TD></TD>
    <TD></TD>
    <TD>过滤器应用规则，支持表达式通配符如下：为空或者则所有的请求都将会应用该过滤器则所有module模块的请求都将会应用该过滤器</TD></TR>
  <TR>
    <TD>modules</TD>
    <TD></TD>
    <TD>/</TD>
    <TD>业务模块定义</TD></TR>
  <TR>
    <TD>module</TD>
    <TD></TD>
    <TD>/</TD>
    <TD>业务模块定义</TD></TR>
  <TR>
    <TD>name</TD>
    <TD>Y</TD>
    <TD></TD>
    <TD>模块的别名，通过URL访问系统时，参数m的值</TD></TR>
  <TR>
    <TD>controller-path</TD>
    <TD></TD>
    <TD >controller</TD>
    <TD>模块的路径（支持命名空间的方式)</TD></TR>
  <TR>
    <TD>controller-suffix</TD>
    <TD></TD>
    <TD>Controller</TD>
    <TD>指定该模块下的controller的统一后缀</TD></TR>
  <TR>
    <TD>error-handler</TD>
    <TD></TD>
    <TD>WIND:web.WindErrorHandler</TD>
    <TD>配置该模块的错误处理句柄，默认会访问WindErrorHandler</TD></TR>
  <TR>
    <TD>template-dir</TD>
    <TD></TD>
    <TD>template</TD>
    <TD>指定模板路径</TD></TR>
  <TR>
    <TD>compile-dir</TD>
    <TD></TD>
    <TD></TD>
    <TD>模板编译文件存放路径</TD></TR></TBODY></TABLE></DIV>
				
<p>应用配置举例:</p>
<pre class="prettyprint Lang-xml">
&#60;?xml version="1.0" encoding="UTF-8"?>
&#60;WIND>
&#60;isclose>1&#60;/isclose>
&#60;isclose-tpl>TEST:template.closed.htm&#60;/isclose-tpl>
&#60;components>
&#60;component name='db'>
&#60;config resource="db_config.php" />
&#60;/component>
&#60;/components>
&#60;web-apps>
&#60;web-app name='default' class='windApplication'>
&#60;iscache>1&#60;/iscache>
&#60;charset>utf-8&#60;/charset>
&#60;filters class='WIND:filter.WindFilterChain'>
&#60;filter name='filter' class='WIND:web.filter.WindFormFilter' pattern='*' form=""/>
&#60;/filters>
&#60;modules>
&#60;module name='default'>
&#60;controller-path>controller&#60;/controller-path>
&#60;controller-suffix>Controller&#60;/controller-suffix>
&#60;error-handler>WIND:web.WindErrorHandler&#60;/error-handler>
&#60;template-dir>template&#60;/template-dir>
&#60;compile-dir>data.template&#60;/compile-dir>
&#60;/module>
&#60;/modules>
&#60;/web-app>
&#60;/web-apps>
&#60;/WIND>
</pre>
</div>					
					
			<div class="info">
				（作者：yishuo 最后更新日期：2012-05-18		）
			</div>	
		</div>
	</div>
	<div class="footer_wrap">
		<div class="footer">
			&copy; 2012 windframework
		</div>
	</div>
</body>
</html>