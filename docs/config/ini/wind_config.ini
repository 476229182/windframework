;应用配置
;应用的名字
[default]
;应用的实现组件
class=windWebApp

;default应用的编码
charset=utf-8

;组件的配置
;组件个性配置，一下的组件配置将会替换掉compontents_config下的对应的组件的配置，同时这里也可以增加自己的组件
;components
;;比如配置一个db组件
;;db相关配置，如果设置了resource则系统会默认找到resource指向的文件作为db配置信息.DB的配置config内容参照DOCS下的db_config配置
;components.db.config.resource=db_config.php
;;比如配置一个router组件
;;router组件主要允许用户配置module/controller/action的访问别名及各自缺省值，同时允许设置urlWrite规则
;components.router.config.module.url-param=m
;components.router.config.module.default-value=default
;components.router.config.controller.url-param=c
;components.router.config.controller.default-value=index
;components.router.config.action.url-param=a
;components.router.config.action.default-value=run
;;以下为url路由规则的配置
;components.router.config.routes.WindRoute.class=WIND:router.route.WindRoute
;components.router.config.routes.WindRoute.params.script.map=1
;components.router.config.routes.WindRoute.params.script.default=index.php
;components.router.config.routes.WindRoute.params.a.map=2
;components.router.config.routes.WindRoute.params.a.default=run
;components.router.config.routes.WindRoute.params.c.map=3
;components.router.config.routes.WindRoute.params.m.map=4

;iscache属性控制windCache组件是否可用，如果关闭则windCache组件将不可用,通过Wind::getApp()->getComponent('windCache');
iscache=1

;charset属性控制输出的编码方式
charset=utf-8

;过滤链配置，可以配置通用的，同时也可以配置Module级别的，controller级别的，action级别的； class: 配置过滤链的实现
;过滤器配置
;name: 过滤器的名字：唯一
;class: 过滤器的实现：
;pattern：*：则所有的请求都将会应用该过滤器
;	module*: 则所有module模块的请求都将会应用该过滤器
;	module_index*: 则module模块下的indexController下的所有Action请求都将会应用该过滤器
;	module_index_add*: 则module模块下的indexController下的addAction将会应用该过滤器
;form: 使用框架提供的formFilter的时候配置给该filter指明需要使用的form
;其他配置项：将会传递给配置的filter相同配置项的属性
filters.class=WIND:filter.WindFilterChain
filters.filter.class=WIND:web.filter.WindFormFilter
filters.filter.pattern=*
filters.filter.form=


;模块配置： 可以通过设定多个<module></module>来设置多组模块配置，每组模块以name来相互区分
;;如下配置一个名为default的模块:
;;controller-path: 模块的路径（采用命名空间的方式) 
modules.default.controller-path=controller
;controller-suffix: 模块的controller后缀信息
modules.default.controller-suffix=Controller
;error-handler: 模块的错误处理类
modules.default.error-handler=WIND:web.WindErrorHandler
;template-dir: 模块的模板目录，支持命名空间的方式如DEFAULT:template
modules.default.template-dir=template
;compile-dir: 模块的模板编译文件保存的目录，支持命名空间的方式如DEFAULT:compile.template
modules.default.compile-dir=data.template